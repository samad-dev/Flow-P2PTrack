<!-- Datatables css -->
<%- contentFor('HeaderCss') %>
    <link href="assets/vendor/datatables.net-bs5/css/dataTables.bootstrap5.min.css" rel="stylesheet" type="text/css" />
    <link href="assets/vendor/datatables.net-responsive-bs5/css/responsive.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="assets/vendor/datatables.net-fixedcolumns-bs5/css/fixedColumns.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="assets/vendor/datatables.net-fixedheader-bs5/css/fixedHeader.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="assets/vendor/datatables.net-buttons-bs5/css/buttons.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="assets/vendor/datatables.net-select-bs5/css/select.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <!-- Select2 css -->
    <link href="assets/vendor/select2/css/select2.min.css" rel="stylesheet" type="text/css" />


    <!-- Daterangepicker css -->
    <link href="assets/vendor/daterangepicker/daterangepicker.css" rel="stylesheet" type="text/css" />

    <link href="assets/vendor/flatpickr/flatpickr.min.css" rel="stylesheet" type="text/css" />
    <!-- Bootstrap Touchspin css -->
    <link href="assets/vendor/bootstrap-touchspin/jquery.bootstrap-touchspin.min.css" rel="stylesheet"
        type="text/css" />

    <%- contentFor('body') %>
        <!-- start page title -->
        <!-- ========== Horizontal Menu Start ========== -->

        <div class="card mt-3">
            <div class="card-body" style="padding:1rem;">
                <div class="row" style="display: flex; justify-content: center; ">
                    <div class="col-auto"><a href="customer_address?id=<%- id %>" class="btn btn-soft-primary">Address</a>
                    </div>
                    <div class="col-auto"><a href="customer_tanks?id=<%- id %>" class="btn btn-soft-primary">Tanks</a>
                    </div>
                    <div class="col-auto"><a href="customer_group?id=<%- id %>" class="btn btn-soft-primary active">Groups</a>
                    </div>
                    <div class="col-auto"><a href="customer_timing?id=<%- id %>"
                            class="btn btn-soft-primary">Timmings</a></div>
                    <div class="col-auto"><a href="customer_routes?id=<%- id %>" class="btn btn-soft-primary">Routes</a>
                    </div>
                    <div class="col-auto"><a href="customer_status?id=<%- id %>" class="btn btn-soft-primary">Status</a>
                    </div>
                    <div class="col-auto"><a href="customer_event?id=<%- id %>" class="btn btn-soft-primary">Events</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- ========== Horizontal Menu End ========== -->
        <!-- end page title -->

        <div class="row">
            <div class="col-xl-6 col-lg-7">
                <div class="card">
                    <div class="card-body">


                        <!-- ========== Table ========== -->

                        <button class="btn btn-soft-primary  mb-3" data-bs-toggle="modal" data-bs-target="#timing">Add
                            New Combination</button>


                        <table id="addtable" class="table table-striped dt-responsive wrap w-100 ">
                            <thead>
                                <tr>
                                    <th>SNO</th>
                                    <th>Depot Customer Group</th>
                                    <th>Information</th>
                                    <th>Depot Product Group</th>
                                    <th>Information</th>
                                    <th>On/Off</th>
                                </tr>
                            </thead>


                            <tbody>
                                <tr>
                                    <th>1</th>
                                    <th>Customer Group 1</th>
                                    <th><i class="ri-error-warning-fill" style="font-size: large;"></i></th>

                                    <th>Product Group</th>
                                    <th><i class="ri-error-warning-fill" style="font-size: large;"></i></th>

                                    <th>
                                        <div class="form-check form-switch">
                                            <input type="checkbox" class="form-check-input">
                                        </div>
                                    </th>

                                </tr>
                                <tr>
                                    <th>2</th>
                                    <th>Customer Group 2</th>
                                    <th><i class="ri-error-warning-fill" style="font-size: large;"></i></th>

                                    <th>Product Group 2</th>
                                    <th><i class="ri-error-warning-fill" style="font-size: large;"></i></th>

                                    <th>
                                        <div class="form-check form-switch">
                                            <input type="checkbox" class="form-check-input">
                                        </div>
                                    </th>
                                </tr>

                            </tbody>
                        </table>
                        <!-- ========== Table End ========== -->



                    </div> <!-- end card body -->
                </div> <!-- end card -->
            </div>
            <div class="col-xl-6 col-lg-7">
                <div class="card">
                    <div class="card-body">


                        <!-- ========== Table ========== -->

                        <button class="btn btn-soft-primary  mb-3" data-bs-toggle="modal"
                            data-bs-target="#timing">Assign To Group</button>
                        <button class="btn btn-soft-primary  mb-3" data-bs-toggle="modal" data-bs-target="#timing">Add
                            To Many Group</button>
                        <button class="btn btn-soft-primary  mb-3" data-bs-toggle="modal" data-bs-target="#timing">Copy
                            From Group</button>


                        <table id="addtable1" class="table table-striped dt-responsive wrap w-100 ">
                            <thead>
                                <tr>
                                    <th>SNO</th>
                                    <th>Group Function</th>
                                    <th>Group Name</th>
                                    <th>Information</th>

                                </tr>
                            </thead>


                            <tbody>
                                <tr>
                                    <th>1</th>
                                    <th>Access Type</th>
                                    <th>Group 1</th>
                                    <th><i class="ri-error-warning-fill" style="font-size: large;"></i></th>


                                </tr>
                                <tr>
                                    <th>2</th>
                                    <th>Ali</th>
                                    <th>Call</th>
                                    <th><i class="ri-error-warning-fill" style="font-size: large;"></i></th>


                                </tr>

                            </tbody>
                        </table>
                        <!-- ========== Table End ========== -->



                    </div> <!-- end card body -->
                </div> <!-- end card -->
            </div><!-- end col-->

            <!-- end col -->
        </div>

        <div id="timing" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="standard-modalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="standard-modalLabel">Add Combination</h4>

                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body " style="padding: 20px;">
                        <form action="">
                            <div class="row mt-3">
                                <div class="mb-3">
                                    <label class="form-label">Depot Cusotmer Group</label>
                                    <select class="form-control select2" data-toggle="select2">
                                        <option>Select</option>
                                        <option>Customer Group 1</option>
                                        <option>Customer Group 2</option>

                                    </select>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Depot Product Group </label>
                                    <select class="form-control select2" data-toggle="select2">
                                        <option>Select</option>
                                        <option>Depot Group 1</option>
                                        <option>Depot Group 2</option>

                                    </select>
                                </div>

                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Save changes</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div>

        <%- contentFor('FooterJs') %>

            <script src="assets/vendor/select2/js/select2.min.js"></script>
            <!-- Input Mask Plugin js -->
            <script src="assets/vendor/jquery-mask-plugin/jquery.mask.min.js"></script>

            <!-- Bootstrap Touchspin Plugin js -->
            <script src="assets/vendor/bootstrap-touchspin/jquery.bootstrap-touchspin.min.js"></script>

            <!-- Bootstrap Maxlength Plugin js -->
            <script src="assets/vendor/bootstrap-maxlength/bootstrap-maxlength.min.js"></script>

            <!-- Typehead Plugin js -->
            <script src="assets/vendor/handlebars/handlebars.min.js"></script>
            <script src="assets/vendor/typeahead.js/typeahead.bundle.min.js"></script>

            <!-- Flatpickr Timepicker Plugin js -->
            <script src="assets/vendor/flatpickr/flatpickr.min.js"></script>

            <!-- Typehead Demo js -->

            <!-- Timepicker Demo js -->
            <script src="assets/js/pages/demo.flatpickr.js"></script>

            <script src="assets/js/pages/demo.typehead.js"></script>
            <!-- Daterangepicker Plugin js -->
            <script src="assets/vendor/daterangepicker/moment.min.js"></script>
            <script src="assets/vendor/daterangepicker/daterangepicker.js"></script> <!-- Daterangepicker Plugin js -->
            <script src="assets/vendor/daterangepicker/moment.min.js"></script>
            <script src="assets/vendor/daterangepicker/daterangepicker.js"></script>
            <script src="assets/vendor/datatables.net/js/jquery.dataTables.min.js"></script>
            <script src="assets/vendor/datatables.net-bs5/js/dataTables.bootstrap5.min.js"></script>
            <script src="assets/vendor/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
            <script src="assets/vendor/datatables.net-responsive-bs5/js/responsive.bootstrap5.min.js"></script>
            <script src="assets/vendor/datatables.net-fixedcolumns-bs5/js/fixedColumns.bootstrap5.min.js"></script>
            <script src="assets/vendor/datatables.net-fixedheader/js/dataTables.fixedHeader.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons-bs5/js/buttons.bootstrap5.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons/js/buttons.html5.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons/js/buttons.flash.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons/js/buttons.print.min.js"></script>
            <script src="assets/vendor/datatables.net-keytable/js/dataTables.keyTable.min.js"></script>
            <script src="assets/vendor/datatables.net-select/js/dataTables.select.min.js"></script>
            <script src="assets/js/pages/demo.datatable-init.js"></script>



            <!-- Datatable Demo Aapp js -->

            <script>

                function initAutocomplete() {
                    const map = new google.maps.Map(document.getElementById("map"), {
                        center: { lat: -33.8688, lng: 151.2195 },
                        zoom: 13,
                        mapTypeId: "roadmap",
                        fullscreenControl: false
                    });

                    // Create the search box and link it to the UI element.
                    const input = document.getElementById("pac-input");
                    const searchBox = new google.maps.places.SearchBox(input);

                    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                    // Bias the SearchBox results towards current map's viewport.
                    map.addListener("bounds_changed", () => {
                        searchBox.setBounds(map.getBounds());
                    });

                    let markers = [];

                    searchBox.addListener("places_changed", () => {
                        const places = searchBox.getPlaces();

                        if (places.length == 0) {
                            return;
                        }

                        // Clear out the old markers.
                        markers.forEach((marker) => {
                            marker.setMap(null);
                        });
                        markers = [];

                        // For each place, get the icon, name and location.
                        const bounds = new google.maps.LatLngBounds();

                        places.forEach((place) => {
                            if (!place.geometry || !place.geometry.location) {
                                console.log("Returned place contains no geometry");
                                return;
                            }

                            const lat = place.geometry.location.lat();
                            const lng = place.geometry.location.lng();
                            let city = "";
                            let state = "";
                            let country = "";
                            let localAddress = "";
                            let houseNumber = "";

                            // Extract address components for city, state, country, local address, and house number.
                            place.address_components.forEach((component) => {
                                if (component.types.includes("locality")) {
                                    city = component.long_name;
                                } else if (component.types.includes("administrative_area_level_1")) {
                                    state = component.long_name;
                                } else if (component.types.includes("country")) {
                                    country = component.long_name;
                                } else if (component.types.includes("neighborhood") || component.types.includes("sublocality_level_1")) {
                                    localAddress = component.long_name;
                                } else if (component.types.includes("street_number")) {
                                    houseNumber = component.long_name;
                                } else if (component.types.includes("route")) {
                                    houseNumber += " " + component.long_name;
                                }
                            });

                            document.getElementById('street').value = localAddress;
                            document.getElementById('latitude').value = lat;
                            document.getElementById('longitude').value = lng;
                            document.getElementById('latlong').value = lat + ',' + lng;

                            console.log("City: " + city);
                            console.log("State: " + state);
                            console.log("Country: " + country);
                            console.log("Local Address: " + localAddress);
                            console.log("House Number: " + houseNumber);
                            console.log("Latitude: " + lat);
                            console.log("Longitude: " + lng);

                            const icon = {
                                url: place.icon,
                                size: new google.maps.Size(71, 71),
                                origin: new google.maps.Point(0, 0),
                                anchor: new google.maps.Point(17, 34),
                                scaledSize: new google.maps.Size(25, 25),
                            };

                            // Create a marker for each place.
                            markers.push(
                                new google.maps.Marker({
                                    map,
                                    icon,
                                    title: place.name,
                                    position: place.geometry.location,
                                }),
                            );

                            if (place.geometry.viewport) {
                                bounds.union(place.geometry.viewport);
                            } else {
                                bounds.extend(place.geometry.location);
                            }
                        });
                        map.fitBounds(bounds);
                    });
                }

                window.initAutocomplete = initAutocomplete;
                $(document).ready(() => {
                    $('#addtable').DataTable({
                        keys: !0, language: {
                            paginate:
                                { previous: "<i class='ri-arrow-left-s-line'>", next: "<i class='ri-arrow-right-s-line'>" }
                        },
                        drawCallback:
                            function () { $(".dataTables_paginate > .pagination").addClass("pagination-rounded") }
                    });
                    $('#addtable1').DataTable({
                        keys: !0, language: {
                            paginate:
                                { previous: "<i class='ri-arrow-left-s-line'>", next: "<i class='ri-arrow-right-s-line'>" }
                        },
                        drawCallback:
                            function () { $(".dataTables_paginate > .pagination").addClass("pagination-rounded") }
                    });



                })
            </script>