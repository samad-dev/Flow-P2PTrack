<!-- Datatables css -->
<%- contentFor('HeaderCss') %>
    <link href="assets/vendor/datatables.net-bs5/css/dataTables.bootstrap5.min.css" rel="stylesheet" type="text/css" />
    <link href="assets/vendor/datatables.net-responsive-bs5/css/responsive.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="assets/vendor/datatables.net-fixedcolumns-bs5/css/fixedColumns.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="assets/vendor/datatables.net-fixedheader-bs5/css/fixedHeader.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="assets/vendor/datatables.net-buttons-bs5/css/buttons.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />
    <link href="assets/vendor/datatables.net-select-bs5/css/select.bootstrap5.min.css" rel="stylesheet"
        type="text/css" />

    <%- contentFor('body') %>
        <!-- start page title -->
        <!-- ========== Horizontal Menu Start ========== -->

        <div class="card mt-3">
            <div class="card-body" style="padding:1rem;">
                <div class="row" style="display: flex; justify-content: center; ">
                    <div class="col-auto"><a href="depot_address" class="btn btn-soft-primary active">Address</a>
                    </div>
                    <div class="col-auto"><a href="depot_tanks?id=<%- id %>" class="btn btn-soft-primary">Tanks</a>
                    </div>
                    <!-- <div class="col-auto"><a href="depot_group?id=<%- id %>" class="btn btn-soft-primary">Groups</a>
                    </div> -->
                    <div class="col-auto"><a href="depot_timing?id=<%- id %>"
                            class="btn btn-soft-primary">Timmings</a></div>
                    <div class="col-auto"><a href="depot_routes?id=<%- id %>" class="btn btn-soft-primary">Routes</a>
                    </div>
                    <div class="col-auto"><a href="depot_status?id=<%- id %>" class="btn btn-soft-primary">Status</a>
                    </div>
                    <div class="col-auto"><a href="depot_event?id=<%- id %>" class="btn btn-soft-primary">Events</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- ========== Horizontal Menu End ========== -->
        <!-- end page title -->

        <div class="row">
            <div class="col-xl-8 col-lg-7">
                <div class="card">
                    <div class="card-body">
                        <form action="">
                            <div class="row mt-3" id="address_row">
                                <div class="mb-3  col-6 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">Depot Name</label>
                                    <input type="text" id="customer_name" class="form-control" >
                                </div>
                                <div class="mb-3 col-6 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">Post Code</label>
                                    <input type="text" id="post_code" class="form-control" >
                                </div>
                                <div class="mb-3 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">Country Code</label>
                                    <input type="text" id="country_code" class="form-control" >
                                </div>
                                <div class="mb-3 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">GSAP Code</label>
                                    <input type="text" id="gsap_code" class="form-control" >
                                </div>
                                <div class="mb-3 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">Street</label>
                                    <input type="text" id="street" class="form-control" >
                                </div>
                                <div class="mb-3 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">Latitude</label>
                                    <input type="text" id="latitude" class="form-control" >
                                </div>
                                <div class="mb-3 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">Longitude</label>
                                    <input type="text" id="longitude" class="form-control" >
                                </div>
                                <div class="mb-3 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">Short Code</label>
                                    <input type="text" id="short_code" class="form-control">
                                </div>
                                <div class="mb-3 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">LatLong</label>
                                    <input type="text" id="latlong" class="form-control">
                                </div>
                                <div class="col-12"
                                    style="display: flex; align-items: center; justify-content: center;">
                                    <button class="btn btn-info rounded-pill" type="button" disabled id="address_save">
                                        Save</button>



                                </div>
                            </div>
                        </form>

                        <!-- ========== Table ========== -->

                        <button class="btn btn-primary rounded-pill mb-3" data-bs-toggle="modal"
                            data-bs-target="#modal">Add Contact</button>


                        <table id="addcontact" class="table table-striped dt-responsive wrap w-100 ">
                            <thead>
                                <tr>
                                    <th>SNO</th>
                                    <th>Name</th>
                                    <th>Contact Type</th>
                                    <th>Details</th>
                                    <th>Active</th>
                                    <th>Edit</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                        <!-- ========== Table End ========== -->



                    </div> <!-- end card body -->
                </div> <!-- end card -->
            </div>
            <div class="col-xl-4 col-lg-5">
                <div class="card text-center">
                    <div class="card-body" style="padding: 0;">
                        <input id="pac-input" class="form-control" type="text" placeholder="Search Box" />


                        <div id="map" style="height: 300px;width:100%;"></div>

                    </div> <!-- end card-body -->
                </div> <!-- end card -->



            </div> <!-- end col-->

            <!-- end col -->
        </div>



        <div id="modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="standard-modalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="standard-modalLabel">Add Contact</h4>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body " style="padding: 20px;">
                        <form action="">
                            <div class="row mt-3" id="modal_row">
                                <div class="mb-3  col-6 col-sm-12  col-lg-6">
                                    <input type="hidden" id="update_id">
                                    <label for="simpleinput" class="form-label">Name</label>
                                    <input type="text" id="name" class="form-control">
                                </div>
                                <div class="mb-3 col-6 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">Contact Type</label>
                                    <input type="text" id="contact" class="form-control">
                                </div>
                                <div class="mb-3 col-sm-12  col-lg-6">
                                    <label for="simpleinput" class="form-label">Details</label>
                                    <input type="text" id="detail" class="form-control">
                                </div>
                                <!-- <div class="col-6">

                                    <div>
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="customCheck1">
                                            <label class="form-check-label" for="customCheck1">Active</label>
                                        </div>

                                    </div>
                                </div> -->


                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="save">Save changes</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div>
        <%- contentFor('FooterJs') %>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

            <script src="assets/vendor/select2/js/select2.min.js"></script>
            <script src="assets/vendor/jquery-mask-plugin/jquery.mask.min.js"></script>
            <script src="assets/vendor/bootstrap-touchspin/jquery.bootstrap-touchspin.min.js"></script>
            <script src="assets/vendor/bootstrap-maxlength/bootstrap-maxlength.min.js"></script>
            <script src="assets/vendor/handlebars/handlebars.min.js"></script>
            <script src="assets/vendor/typeahead.js/typeahead.bundle.min.js"></script>
            <script src="assets/vendor/flatpickr/flatpickr.min.js"></script>
            <script src="assets/js/pages/demo.flatpickr.js"></script>
            <script src="assets/js/pages/demo.typehead.js"></script>
            <script src="assets/vendor/daterangepicker/moment.min.js"></script>
            <script src="assets/vendor/daterangepicker/daterangepicker.js"></script> <!-- Daterangepicker Plugin js -->
            <script src="assets/vendor/daterangepicker/moment.min.js"></script>
            <script src="assets/vendor/daterangepicker/daterangepicker.js"></script>
            <script src="assets/vendor/datatables.net/js/jquery.dataTables.min.js"></script>
            <script src="assets/vendor/datatables.net-bs5/js/dataTables.bootstrap5.min.js"></script>
            <script src="assets/vendor/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
            <script src="assets/vendor/datatables.net-responsive-bs5/js/responsive.bootstrap5.min.js"></script>
            <script src="assets/vendor/datatables.net-fixedcolumns-bs5/js/fixedColumns.bootstrap5.min.js"></script>
            <script src="assets/vendor/datatables.net-fixedheader/js/dataTables.fixedHeader.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons-bs5/js/buttons.bootstrap5.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons/js/buttons.html5.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons/js/buttons.flash.min.js"></script>
            <script src="assets/vendor/datatables.net-buttons/js/buttons.print.min.js"></script>
            <script src="assets/vendor/datatables.net-keytable/js/dataTables.keyTable.min.js"></script>
            <script src="assets/vendor/datatables.net-select/js/dataTables.select.min.js"></script>
            <script src="assets/js/pages/demo.datatable-init.js"></script>
            <script
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBNyJWb04pByaU1CTmimoWNl3b86VV6qZ8&callback=initAutocomplete&libraries=places&v=weekly"
                defer></script>


            <!-- Datatable Demo Aapp js -->

            <script>

                function initAutocomplete() {
                    const map = new google.maps.Map(document.getElementById("map"), {
                        center: { lat: -33.8688, lng: 151.2195 },
                        zoom: 13,
                        mapTypeId: "roadmap",
                        fullscreenControl: false
                    });

                    // Create the search box and link it to the UI element.
                    const input = document.getElementById("pac-input");
                    const searchBox = new google.maps.places.SearchBox(input);

                    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                    // Bias the SearchBox results towards current map's viewport.
                    map.addListener("bounds_changed", () => {
                        searchBox.setBounds(map.getBounds());
                    });

                    let markers = [];

                    searchBox.addListener("places_changed", () => {
                        const places = searchBox.getPlaces();

                        if (places.length == 0) {
                            return;
                        }

                        // Clear out the old markers.
                        markers.forEach((marker) => {
                            marker.setMap(null);
                        });
                        markers = [];

                        // For each place, get the icon, name and location.
                        const bounds = new google.maps.LatLngBounds();

                        places.forEach((place) => {
                            if (!place.geometry || !place.geometry.location) {
                                console.log("Returned place contains no geometry");
                                return;
                            }

                            const lat = place.geometry.location.lat();
                            const lng = place.geometry.location.lng();
                            let city = "";
                            let state = "";
                            let country = "";
                            let localAddress = "";
                            let houseNumber = "";

                            // Extract address components for city, state, country, local address, and house number.
                            place.address_components.forEach((component) => {
                                if (component.types.includes("locality")) {
                                    city = component.long_name;
                                } else if (component.types.includes("administrative_area_level_1")) {
                                    state = component.long_name;
                                } else if (component.types.includes("country")) {
                                    country = component.long_name;
                                } else if (component.types.includes("neighborhood") || component.types.includes("sublocality_level_1")) {
                                    localAddress = component.long_name;
                                } else if (component.types.includes("street_number")) {
                                    houseNumber = component.long_name;
                                } else if (component.types.includes("route")) {
                                    houseNumber += " " + component.long_name;
                                }
                            });

                            document.getElementById('street').value = houseNumber;
                            document.getElementById('latitude').value = lat;
                            document.getElementById('longitude').value = lng;
                            document.getElementById('latlong').value = lat + ',' + lng;

                            console.log("City: " + city);
                            console.log("State: " + state);
                            console.log("Country: " + country);
                            console.log("Local Address: " + localAddress);
                            console.log("House Number: " + houseNumber);
                            console.log("Latitude: " + lat);
                            console.log("Longitude: " + lng);

                            const icon = {
                                url: place.icon,
                                size: new google.maps.Size(71, 71),
                                origin: new google.maps.Point(0, 0),
                                anchor: new google.maps.Point(17, 34),
                                scaledSize: new google.maps.Size(25, 25),
                            };

                            // Create a marker for each place.
                            markers.push(
                                new google.maps.Marker({
                                    map,
                                    icon,
                                    title: place.name,
                                    position: place.geometry.location,
                                }),
                            );

                            if (place.geometry.viewport) {
                                bounds.union(place.geometry.viewport);
                            } else {
                                bounds.extend(place.geometry.location);
                            }
                        });
                        map.fitBounds(bounds);
                    });
                }

                window.initAutocomplete = initAutocomplete;

                $(document).ready(() => {


                    // Bind input event listener to all input fields
                    $('#address_row input[type="text"]').on('input', updateSubmitButton);


                    contacts();
                    customer_details()
                })
                $('#address_save').click(() => {
                    var customer_name = $('#customer_name').val();
                    var post_code = $('#post_code').val();
                    var country_code = $('#country_code').val();
                    var gsap_code = $('#gsap_code').val();
                    var street = $('#street').val();
                    var latitude = $('#latitude').val();
                    var longitude = $('#longitude').val();
                    var short_code = $('#short_code').val();

                    if (!customer_name || !post_code || !country_code || !gsap_code || !latitude || !longitude || !short_code) {
                        throw new Error('All fields must be filled');
                    }
                    try {
                        var form = new FormData();
                        form.append("site_name", customer_name);
                        form.append("post_code", post_code);
                        form.append("country_code", country_code);
                        form.append("gsap_code", gsap_code);
                        form.append("street", street);
                        form.append("latitude", latitude);
                        form.append("longitude", longitude);
                        form.append("short_code", short_code);

                        var settings = {
                            "url": "customer_address/<%- id%>",
                            "method": "PUT",
                            "timeout": 0,
                            "processData": false,
                            "mimeType": "multipart/form-data",
                            "contentType": false,
                            "data": form
                        };
                        $.ajax({
                            ...settings,
                            statusCode: {
                                200: function (response) {
                                    console.log(response);
                                    $('#address_save').prop('disabled',true);

                                },

                            },
                            success: function (data) {
                                contacts();
                               
                                Swal.fire(
                                    'Success!', 'Address Updated Successfully!', 'success'
                                )
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                console.log(xhr)
                                console.log(textStatus)
                                console.log(errorThrown)

                                console.log(errorThrown);


                                // console.log("Request failed with status code: " + xhr.status);
                            }
                        });


                    } catch (error) {
                        console.error(error.message);
                        // Handle the error, e.g., display a message to the user
                        Swal.fire(
                            'Server Error!', 'Error', 'error'
                        )
                    }

                })


                $('#save').click(() => {

                    try {
                        var name = $('#name').val();
                        var contact = $('#contact').val();
                        var detail = $('#detail').val();

                        // Check if any required field is empty
                        if (!name || !contact || !detail) {
                            throw new Error('All fields must be filled');
                        }
                        id = $('#update_id').val()
                        if (id == "") {
                            var form = new FormData();
                            form.append("customer_id", "<%- id%>");
                            form.append("name", name);
                            form.append("contact_type", contact);
                            form.append("detail", detail);
                            form.append("active", "active");

                            var settings = {
                                "url": "customer_contact",
                                "method": "POST",
                                "timeout": 0,
                                "processData": false,
                                "mimeType": "multipart/form-data",
                                "contentType": false,
                                "data": form
                            };

                            $.ajax({
                                ...settings,
                                statusCode: {
                                    200: function (response) {
                                        console.log(response);
                                    },

                                },
                                success: function (data) {
                                    contacts();

                                    clear_fields('modal_row');
                                    $('#modal').modal('hide');
                                    Swal.fire(
                                        'Success!', 'Contact Created Successfully!', 'success'
                                    )
                                },
                                error: function (xhr, textStatus, errorThrown) {
                                    console.log(xhr)
                                    console.log(textStatus)
                                    console.log(errorThrown)

                                    console.log(errorThrown);


                                    // console.log("Request failed with status code: " + xhr.status);
                                }
                            });
                        } else {
                            var form = new FormData();
                            form.append("customer_id", "<%- id%>");
                            form.append("name", name);
                            form.append("contact_type", contact);
                            form.append("detail", detail);
                            

                            var settings = {
                                "url": "customer_contact/" + id,
                                "method": "PUT",
                                "timeout": 0,
                                "processData": false,
                                "mimeType": "multipart/form-data",
                                "contentType": false,
                                "data": form
                            };
                            $.ajax({
                                ...settings,
                                statusCode: {
                                    200: function (response) {
                                        console.log(response);
                                    },

                                },
                                success: function (data) {
                                    contacts();
                                    clear_fields('modal_row');
                                    $('#modal').modal('hide');
                                    Swal.fire(
                                        'Success!', 'Contact Updated Successfully!', 'success'
                                    )
                                },
                                error: function (xhr, textStatus, errorThrown) {
                                    console.log(xhr)
                                    console.log(textStatus)
                                    console.log(errorThrown)

                                    console.log(errorThrown);


                                    // console.log("Request failed with status code: " + xhr.status);
                                }
                            });
                            console.log("else")
                        }
                    } catch (error) {
                        console.error(error.message);
                        // Handle the error, e.g., display a message to the user
                        Swal.fire(
                            'Server Error!', 'Error', 'error'
                        )
                    }


                })
                function redirect(url) {
                    window.location.href = '' + url + '';
                }
                function check_redirection(t_id) {
                    if (window.location.pathname !== '/customer') {
                        window.location.href = '/customer_details';
                        $('.nav-link.active').removeClass('active');
                        $(t_id).find('a.nav-link').addClass('active');

                        $('.tab-pane.show.active').removeClass('show active');
                        var targetTabPane = $(t_id).find('a.nav-link').attr('href');
                        $(targetTabPane).addClass('show active');
                    }
                    $('.nav-link.active').removeClass('active');
                    $(t_id).find('a.nav-link').addClass('active');

                    $('.tab-pane.show.active').removeClass('show active');
                    var targetTabPane = $(t_id).find('a.nav-link').attr('href');
                    $(targetTabPane).addClass('show active');
                }
                function edit(id) {

                    $.ajax({
                        url: "customer_contact/" + id,
                        type: 'GET',
                        dataType: 'json',
                        success: function (response) {
                            $('#update_id').val(response['id']);
                            $('#name').val(response['name']);
                            $('#contact').val(response['contact_type']);
                            $('#detail').val(response['detail']);
                        }
                    });
                }
                function clear_fields(id) {

                    $('#' + id + '').find('input, textarea, select').val('');
                    $('#' + id + '').find('input:checkbox, input:radio').prop('checked', false);

                }
                function delete_rec(id) {
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: "customer_contact/" + id,
                                type: 'Delete',
                                dataType: 'json',
                                success: function (response) {
                                    contacts();
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "Your file has been deleted.",
                                        icon: "success"
                                    });
                                }
                            });

                        }
                    });

                }
                function contacts() {
                    var settings = {
                        "url": "customer_contact_byId/" + '<%- id %>',
                        "method": "GET",
                        "timeout": 0,
                    };

                    $.ajax(settings).done(function (response) {
                        contacts_tbl.clear().draw();

                        $.each(response, function (index, data) {
                            var checkbox = '<div class="form-check form-switch">' +
                                '<input type="checkbox" class="form-check-input" onclick="update_status(' + data.id + ')"  id="check-' + data.id + '" ' + (data.active == "active" ? "checked" : "") + '>' +
                                '</div>';
                            contacts_tbl.row.add([
                                index + 1,
                                data.name,
                                data.contact_type,
                                data.detail,
                                checkbox,
                                '<th>' +
                                '<button class="btn btn-soft-warning" onclick="edit(\'' + data.id + '\')" data-bs-toggle="modal" data-bs-target="#modal">' +
                                '<i class="ri-pencil-fill"></i>' +
                                '</button>' +
                                '</th>',
                                '<th>' +
                                '<button class="btn btn-soft-danger" onclick="delete_rec(\'' + data.id + '\')">' +
                                '<i class="ri-delete-bin-6-fill"></i>' +
                                '</button>' +
                                '</th>'
                            ]).draw(false).node();


                        });
                    });
                }


                contacts_tbl = $('#addcontact').DataTable({

                    keys: !0,
                    
                    searchBox: false,
                    language: {
                        paginate:
                            { previous: "<i class='ri-arrow-left-s-line'>", next: "<i class='ri-arrow-right-s-line'>" }
                    },
                    drawCallback:
                        function () { $(".dataTables_paginate > .pagination").addClass("pagination-rounded") },

                });

                function update_status(id) {
                    status = $('#check-' + id + '').is(':checked') ? "active" : "inactive"
                    var form = new FormData();
                    form.append("active", status);


                    // Your code to submit the form or any other processing

                    var settings = {
                        "url": "customer_contact_status/" + id,
                        "method": "PUT",
                        "timeout": 0,
                        "headers": {
                            "Cookie": "connect.sid=s%3Aaz8mfHZmwSTOggI-Zv19Nm314mPw3wNj.tZ52L9XFmD7ZBCX9ZzB8W45d%2BpJh01uhXpaBWzUIahs"
                        },
                        "processData": false,
                        "mimeType": "multipart/form-data",
                        "contentType": false,
                        "data": form
                    };

                    $.ajax({
                        ...settings,
                        statusCode: {
                            200: function (response) {
                                console.log(response);
                            },

                        },
                        success: function (data) {

                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.log(xhr)
                            console.log(textStatus)
                            console.log(errorThrown)

                            console.log(errorThrown);


                            // console.log("Request failed with status code: " + xhr.status);
                        }
                    });

                }

                function updateSubmitButton() {
                    var enableSubmit = false; // Reset enableSubmit for each check

                    // Check each input field for content
                    $('#address_row input[type="text"]').each(function () {
                        if ($(this).val().trim() !== '') {
                            enableSubmit = true;
                            return false; // Exit the loop early if any input has content
                        }
                    });

                    // Enable/disable the submit button based on the check
                    $('#address_save').prop('disabled', !enableSubmit);
                }

                function customer_details() {
                    var settings = {
                        "url": "customer/" + '<%- id %>',
                        "method": "GET",
                        "timeout": 0,
                    };

                    $.ajax(settings).done(function (response) {

                        $('#customer_name').val(response['site_name']);
                        $('#post_code').val(response['post_code']);
                        $('#country_code').val(response['country_code']);
                        $('#gsap_code').val(response['country_code']);
                        $('#street').val(response['street']);
                        $('#latitude').val(response['latitude']);
                        $('#longitude').val(response['longitude']);
                        $('#short_code').val(response['short_code']);
                        $('#latlong').val(response['latitude'] =="null"?"":response['latitude'] + "," + response['longitude'] =="null"?"":response['longitude'] );
                    })
                }
            </script>